package com.ipr.entity.other;
// Generated 3 Jan, 2019 3:16:32 PM by Hibernate Tools 5.1.0.Alpha1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import com.ipr.entity.AppUser;

/**
 * Account generated by hbm2java
 */
@Entity
@Table(name = "account", catalog = "ipr_data", uniqueConstraints = { @UniqueConstraint(columnNames = "website"),
		@UniqueConstraint(columnNames = "mail_id") })
public class Account implements java.io.Serializable {

	private Long id;
	private AppUser appUser;
	private String accountName;
	private String mailId;
	private Long contact;
	private String address;
	private String website;
	private Date createdDate;
	private Set<Contact> contacts = new HashSet<>(0);
	private Set <Project>projects = new HashSet<>(0);

	public Account() {
	}

	public Account(AppUser appUser) {
		this.appUser = appUser;
	}

	public Account(AppUser appUser, String accountName, String mailId, Long contact, String address, String website,
			Date createdDate, Set<Contact> contacts, Set <Project>projects) {
		this.appUser = appUser;
		this.accountName = accountName;
		this.mailId = mailId;
		this.contact = contact;
		this.address = address;
		this.website = website;
		this.createdDate = createdDate;
		this.contacts = contacts;
		this.projects = projects;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", nullable = false)
	public AppUser getAppUser() {
		return this.appUser;
	}

	public void setAppUser(AppUser appUser) {
		this.appUser = appUser;
	}

	@Column(name = "account_name", length = 250)
	public String getAccountName() {
		return this.accountName;
	}

	public void setAccountName(String accountName) {
		this.accountName = accountName;
	}

	@Column(name = "mail_id", unique = true, length = 250)
	public String getMailId() {
		return this.mailId;
	}

	public void setMailId(String mailId) {
		this.mailId = mailId;
	}

	@Column(name = "contact")
	public Long getContact() {
		return this.contact;
	}

	public void setContact(Long contact) {
		this.contact = contact;
	}

	@Column(name = "address", length = 65535)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "website", unique = true, length = 250)
	public String getWebsite() {
		return this.website;
	}

	public void setWebsite(String website) {
		this.website = website;
	}

	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", length = 19, nullable = false, updatable = false, insertable = false, columnDefinition = "TIMESTAMP DEFAULT CURRENT_TIMESTAMP")
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Contact> getContacts() {
		return contacts;
	}

	public void setContacts(Set<Contact> contacts) {
		this.contacts = contacts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Project> getProjects() {
		return projects;
	}

	public void setProjects(Set<Project> projects) {
		this.projects = projects;
	}

	
	
	

}
